name: ÌîÑÎ°†Ìä∏ÏóîÎìú Ïö¥ÏòÅÏÑúÎ≤Ñ Î∞∞Ìè¨

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - frontend/**
  pull_request:
    branches:
      - main
    paths: frontend/**

env:
  ARTIFACT_DIRECTORY: ./frontend/dist
  DOCKER_DIRECTORY: ./frontend/docker
  PROD_NGINX_FULLCHAIN: ${{ secrets.PROD_NGINX_FULLCHAIN }}
  PROD_NGINX_PRIVKEY: ${{ secrets.PROD_NGINX_PRIVKEY }}
  SERVER_OPTIONS_SSL_NGINX: ${{ secrets.SERVER_OPTIONS_SSL_NGINX }}
  REQUEST_API_URL: ${{ secrets.PROD_DOMAIN }}

jobs:
  debug: 
    name: ÌôòÍ≤ΩÎ≥ÄÏàò ÎîîÎ≤ÑÍπÖ
    runs-on: ubuntu-latest
    steps:
      - name: Ï∂úÎ†•
        run: |
          echo "ARTIFACT_DIRECTORY is: ${{ env.ARTIFACT_DIRECTORY != '' }}"
          echo "DOCKER_DIRECTORY is: ${{ env.DOCKER_DIRECTORY != '' }}"
          echo "PROD_NGINX_FULLCHAIN is: ${{ env.PROD_NGINX_FULLCHAIN != '' }}"
          echo "PROD_NGINX_PRIVKEY is: ${{ env.PROD_NGINX_PRIVKEY != '' }}"
          echo "SERVER_OPTIONS_SSL_NGINX is: ${{ env.SERVER_OPTIONS_SSL_NGINX != '' }}"

  docker-image-build-push:
    name: ÎèÑÏª§ Ïù¥ÎØ∏ÏßÄ ÎπåÎìú -> Ìë∏Ïãú
    runs-on: ubuntu-latest

    steps:
      - name: Ï≤¥ÌÅ¨ÏïÑÏõÉ
        uses: actions/checkout@v4
      - name: ls
        run: ls -arlth
      - name: ÎèÑÏª§ Î°úÍ∑∏Ïù∏
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: ÎèÑÏª§ Ïù¥ÎØ∏ÏßÄ ÎπåÎìú
        run: docker compose -f ${{ env.DOCKER_DIRECTORY }}/docker-compose-prod.yml build --no-cache
      - name: ÎèÑÏª§ Ïù¥ÎØ∏ÏßÄ Ìë∏Ïãú
        run: docker compose -f ${{ env.DOCKER_DIRECTORY }}/docker-compose-prod.yml push

  deploy: 
    name: Î∞∞Ìè¨
    needs: docker-image-build-push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: SSH Ï†ëÏÜç ÌõÑ Î∞∞Ìè¨
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USERNAME }}
          key: ${{ secrets.PROD_SERVER_SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            whoami
            cd gongnomok-simulator
            git pull

            sudo docker compose -f ./frontend/docker/docker-compose-prod.yml pull
            sudo docker compose -f ./frontend/docker/docker-compose-prod.yml down
            sudo docker compose -f ./frontend/docker/docker-compose-prod.yml up -d

  slack_notify_success:
    needs: deploy
    name: Ïä¨Îûô ÏÑ±Í≥µ Î©îÏÑ∏ÏßÄ Ï†ÑÏÜ°
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: slackapi/slack-github-action@v1.26.0
        with: 
          channel-id: ${{ secrets.SLACK_CICD_CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "rich_text",
                  "elements": [
                    {
                      "type": "rich_text_section",
                      "elements": [
                        {
                          "type": "text",
                          "text": "ÌîÑÎ°†Ìä∏ Î∞∞Ìè¨ ÏïàÎÇ¥",
                          "style": {
                            "bold": true
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "plain_text",
                    "text": "üü¢ Î∞∞Ìè¨ ÏÑ±Í≥µ",
                    "emoji": true
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_CICD_BOT_TOKEN }}


  slack_notify_failure:
    needs: deploy
    name: Ïä¨Îûô Ïã§Ìå® Î©îÏÑ∏ÏßÄ Ï†ÑÏÜ°
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - uses: slackapi/slack-github-action@v1.26.0
        with: 
          channel-id: ${{ secrets.SLACK_CICD_CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "rich_text",
                  "elements": [
                    {
                      "type": "rich_text_section",
                      "elements": [
                        {
                          "type": "text",
                          "text": "ÌîÑÎ°†Ìä∏ Î∞∞Ìè¨ ÏïàÎÇ¥",
                          "style": {
                            "bold": true
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "plain_text",
                    "text": "üî¥ Î∞∞Ìè¨ Ïã§Ìå®",
                    "emoji": true
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_CICD_BOT_TOKEN }}